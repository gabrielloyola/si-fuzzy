FUNCTION_BLOCK wheelDynamics

VAR_INPUT
    Center_Left_Sensor : REAL;
    Center_Right_Sensor : REAL;
    Left_Sensor : REAL;
    Right_Sensor : REAL;
    Orientation : REAL;
END_VAR

VAR_OUTPUT
    Left_Wheel_Vel : REAL;
    Right_Wheel_Vel : REAL;
END_VAR

FUZZIFY Center_Left_Sensor
    RANGE := (0 .. 2000);
    TERM No_Signal := (0, 1) (1, 1);
    TERM Far := (1, 0) (2, 1) (900, 1) (1000, 0) ;
    TERM Near := (900, 0) (1000, 1) (2000, 1) ;
END_FUZZIFY

FUZZIFY Center_Right_Sensor
    RANGE := (0 .. 2000);
    TERM No_Signal := (0, 1) (1, 1);
    TERM Far := (1, 0) (2, 1) (900, 1) (1000, 0) ;
    TERM Near := (900, 0) (1000, 1) (2000, 1) ;
END_FUZZIFY

FUZZIFY Left_Sensor
    RANGE := (0 .. 2000);
    TERM No_Signal := (0, 1) (1, 1);
    TERM Far := (1, 0) (2, 1) (900, 1) (1000, 0) ;
    TERM Near := (900, 0) (1000, 1) (2000, 1) ;
END_FUZZIFY

FUZZIFY Right_Sensor
    RANGE := (0 .. 2000);
    TERM No_Signal := (0, 1) (1, 1);
    TERM Far := (1, 0) (2, 1) (900, 1) (1000, 0) ;
    TERM Near := (900, 0) (1000, 1) (2000, 1) ;
END_FUZZIFY

FUZZIFY Orientation
    RANGE := (-181 .. 181);
    TERM Left := (-181, 0) (-40, 1) (0, 0) ;
    TERM Center := (-60, 0) (-20, 1) (20, 1) (60, 0) ;
    TERM Right := (0, 0) (40, 1) (181, 0) ;
END_FUZZIFY

DEFUZZIFY Left_Wheel_Vel
    METHOD : COG;
    RANGE:=(-5.0 .. 5.0);
    TERM Fast_Reverse := (-5, 0) (-5, 1) (-3.5, 1) (-1, 0) ;
    TERM Slow_Reverse := (-4, 0) (-1.5, 1) (0, 1) (0, 0) ;
    TERM Stopped := (-0.2, 0) (-0.1, 1) (0.1, 1) (0.2, 0) ;
    TERM Slow_Forward := (0, 0) (0, 1) (1.5, 1) (4, 0) ;
    TERM Fast_Forward := (1, 0) (3.5, 1) (5, 1) (5, 0) ;
END_DEFUZZIFY

DEFUZZIFY Right_Wheel_Vel
    METHOD : COG;
    RANGE:=(-5.0 .. 5.0);
    TERM Fast_Reverse := (-5, 0) (-5, 1) (-3.5, 1) (-1, 0) ;
    TERM Slow_Reverse := (-4, 0) (-1.5, 1) (0, 1) (0, 0) ;
    TERM Stopped := (-0.2, 0) (-0.1, 1) (0.1, 1) (0.2, 0) ;
    TERM Slow_Forward := (0, 0) (0, 1) (1.5, 1) (4, 0) ;
    TERM Fast_Forward := (1, 0) (3.5, 1) (5, 1) (5, 0) ;
END_DEFUZZIFY

RULEBLOCK
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 0 : IF Orientation IS Left AND Left_Sensor IS No_Signal AND Center_Left_Sensor IS No_Signal AND Center_Right_Sensor IS No_Signal AND Right_Sensor IS No_Signal THEN Left_Wheel_Vel IS Fast_Forward AND Right_Wheel_Vel is Stopped
    RULE 1 : IF Orientation IS Right AND Left_Sensor IS No_Signal AND Center_Left_Sensor IS No_Signal AND Center_Right_Sensor IS No_Signal AND Right_Sensor IS No_Signal THEN Left_Wheel_Vel IS Stopped AND Right_Wheel_Vel is Fast_Forward
    RULE 2 : IF Orientation IS Center AND Left_Sensor IS No_Signal AND Center_Left_Sensor IS No_Signal AND Center_Right_Sensor IS No_Signal AND Right_Sensor IS No_Signal THEN Left_Wheel_Vel IS Fast_Forward AND Right_Wheel_Vel is Fast_Forward

    RULE 3 : IF Left_Sensor IS NOT No_Signal THEN Left_Wheel_Vel IS Fast_Forward
    RULE 4 : IF Left_Sensor IS NOT No_Signal THEN Right_Wheel_Vel IS Slow_Forward
    RULE 5 : IF Center_Left_Sensor IS NOT No_Signal THEN Left_Wheel_Vel IS Slow_Forward
    RULE 6 : IF Center_Left_Sensor IS NOT No_Signal THEN Right_Wheel_Vel IS Stopped

    RULE 7 : IF Right_Sensor IS NOT No_Signal THEN Right_Wheel_Vel IS Fast_Forward
    RULE 8 : IF Right_Sensor IS NOT No_Signal THEN Left_Wheel_Vel IS Slow_Forward
    RULE 9 : IF Center_Right_Sensor IS NOT No_Signal THEN Right_Wheel_Vel IS Fast_Forward
    RULE 10 : IF Center_Right_Sensor IS NOT No_Signal THEN Left_Wheel_Vel IS Stopped

    RULE 11 : IF Left_Sensor IS NOT No_Signal AND Center_Left_Sensor IS No_Signal THEN Left_Wheel_Vel IS Fast_Forward
    RULE 12 : IF Left_Sensor IS NOT No_Signal AND Center_Left_Sensor IS No_Signal THEN Right_Wheel_Vel IS Slow_Forward
    RULE 13 : IF Right_Sensor IS NOT No_Signal AND Center_Right_Sensor IS No_Signal THEN Right_Wheel_Vel IS Fast_Forward
    RULE 14 : IF Right_Sensor IS NOT No_Signal AND Center_Right_Sensor IS No_Signal THEN Left_Wheel_Vel IS Slow_Forward

    RULE 15 : IF Left_Sensor IS NOT No_Signal AND Center_Left_Sensor IS Far THEN Left_Wheel_Vel IS Fast_Forward
    RULE 16 : IF Left_Sensor IS NOT No_Signal AND Center_Left_Sensor IS Far THEN Right_Wheel_Vel IS Slow_Reverse
    RULE 17 : IF Right_Sensor IS NOT No_Signal AND Center_Right_Sensor IS Far THEN Right_Wheel_Vel IS Fast_Forward
    RULE 18 : IF Right_Sensor IS NOT No_Signal AND Center_Right_Sensor IS Far THEN Left_Wheel_Vel IS Slow_Reverse

    RULE 19 : IF Left_Sensor IS NOT No_Signal AND Center_Left_Sensor IS Near THEN Left_Wheel_Vel IS Fast_Forward
    RULE 20 : IF Left_Sensor IS NOT No_Signal AND Center_Left_Sensor IS Near THEN Right_Wheel_Vel IS Fast_Reverse
    RULE 21 : IF Right_Sensor IS NOT No_Signal AND Center_Right_Sensor IS Near THEN Right_Wheel_Vel IS Fast_Forward
    RULE 22 : IF Right_Sensor IS NOT No_Signal AND Center_Right_Sensor IS Near THEN Left_Wheel_Vel IS Fast_Reverse

    RULE 23 : IF Center_Left_Sensor IS NOT No_Signal AND Center_Right_Sensor IS NOT No_Signal AND Right_Sensor IS NOT No_Signal THEN Left_Wheel_Vel IS Slow_Reverse
    RULE 24 : IF Center_Left_Sensor IS NOT No_Signal AND Center_Right_Sensor IS NOT No_Signal AND Right_Sensor IS NOT No_Signal THEN Right_Wheel_Vel IS Fast_Forward

    RULE 25 : IF Center_Right_Sensor IS NOT No_Signal AND Center_Left_Sensor IS NOT No_Signal AND Left_Sensor IS NOT No_Signal THEN Left_Wheel_Vel IS Fast_Forward
    RULE 26 : IF Center_Right_Sensor IS NOT No_Signal AND Center_Left_Sensor IS NOT No_Signal AND Left_Sensor IS NOT No_Signal THEN Right_Wheel_Vel IS Slow_Reverse
END_RULEBLOCK

END_FUNCTION_BLOCK